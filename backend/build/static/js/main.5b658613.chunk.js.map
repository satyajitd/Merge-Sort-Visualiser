{"version":3,"sources":["components/ArrayElement.js","components/Array.js","components/Level.js","App.js","index.js"],"names":["ArrayElement","props","useState","value","setValue","undefined","cssClasses","lastLevel","highlight","yellow","className","Array","elementContainer","elementIndex","range","sortStep","hasOwnProperty","elementValue","push","id","Level","arrays","subarrays","map","arrayIndex","length","getSortStep","elements","forEach","obj","arrayID","App","counter","setCounter","arrayData","setArrayData","processData","setProcessedData","handleClick","event","preventDefault","target","Object","keys","levelIndex","level","index","step","partitions","onSubmit","axios","post","then","res","data","catch","err","alert","onChange","type","onClick","disabled","role","aria-label","href","rel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b658613.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst ArrayElement = (props) => {\r\n    \r\n    const [value, setValue] = useState('')\r\n    if(props.value !== undefined && props.value !== value)\r\n        setValue(props.value)\r\n\r\n    let cssClasses = 'box';\r\n    if(!props.lastLevel)\r\n        cssClasses += ' border-color'\r\n    if(props.highlight) \r\n        cssClasses += props.yellow? ' yellow' : ' pink';\r\n    if(props.lastLevel && props.value !== undefined)\r\n        cssClasses += ' border-color'\r\n\r\n    return (\r\n        <div className={cssClasses}>\r\n            {value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArrayElement;","import React from 'react'\r\nimport ArrayElement from './ArrayElement'\r\n\r\nconst Array = (props) => {\r\n    \r\n    const elementContainer = [];\r\n    for(let elementIndex = 0; elementIndex < props.range; elementIndex++) {\r\n        \r\n        let highlight, value, yellow = false\r\n        if(props.sortStep !== undefined && props.sortStep.hasOwnProperty(\"arrayElementID\")) {\r\n            highlight = props.sortStep[\"arrayElementID\"] === elementIndex\r\n            yellow = props.sortStep[\"arrayElementID\"] === elementIndex\r\n            value = props.sortStep[\"arrayElementID\"] === elementIndex ? props.sortStep[\"value\"] : undefined\r\n        }\r\n        else {\r\n            highlight = props.sortStep === elementIndex\r\n            value = props.elementValue !== undefined? props.elementValue : undefined\r\n        }\r\n    \r\n        elementContainer.push(\r\n            <ArrayElement \r\n                id={'arrayElement_' + elementIndex} \r\n                highlight={highlight} \r\n                yellow={yellow}\r\n                value={value}\r\n                lastLevel={props.lastLevel}\r\n            />\r\n        )\r\n    }\r\n        \r\n    return(\r\n        <div className='row-flex'>\r\n            {elementContainer}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Array","import React from 'react'\r\nimport Array from './Array'\r\n\r\nconst Level = (props) => {\r\n    \r\n    const getSortStep = (arrayIndex) => {\r\n        if(props.sortStep === undefined)\r\n            return undefined\r\n        else if(props.sortStep.hasOwnProperty('arrayID') && arrayIndex === props.sortStep['arrayID']) {\r\n            return {\r\n                \"arrayElementID\": props.sortStep[\"arrayElementID\"],\r\n                \"value\": props.sortStep[\"value\"]\r\n            }\r\n        }\r\n        else if(props.sortStep.hasOwnProperty('childArrayIDs') && props.sortStep['childArrayIDs'][0] === arrayIndex)\r\n            return props.sortStep['childArrayElementIDs'][0]\r\n        else if(props.sortStep.hasOwnProperty('childArrayIDs') && props.sortStep['childArrayIDs'].length > 1 && props.sortStep['childArrayIDs'][1] === arrayIndex)\r\n            return props.sortStep['childArrayElementIDs'][1]\r\n        \r\n        return undefined\r\n    }\r\n\r\n    const arrays = props.subarrays.map((range, arrayIndex) => {\r\n        const sortStep = getSortStep(arrayIndex)\r\n\r\n        let elementValue = undefined\r\n        if(props.elements !== undefined) {\r\n            props.elements.forEach(obj => {\r\n                if(obj.arrayID === arrayIndex)\r\n                    elementValue = obj.value\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Array \r\n                id={'array_' + arrayIndex} \r\n                range={range} \r\n                sortStep={sortStep} \r\n                elementValue={elementValue}\r\n                lastLevel={props.lastLevel} \r\n            />\r\n        )\r\n    });\r\n    return (\r\n        <div className='level-row-flex'>\r\n            {arrays}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Level","import React, { useState } from 'react'\r\nimport './css/style.css'\r\nimport Level from './components/Level'\r\n\r\nimport axios from 'axios'\r\n\r\n// add reset button\r\nconst App = () => {\r\n\r\n    const [counter, setCounter] = useState(-1)\r\n    const [arrayData, setArrayData] = useState('')\r\n    const [processData, setProcessedData] = useState({})\r\n\r\n    const getSortStep = (index) => {\r\n        const step = counter !== -1? processData['steps'][counter] : {}\r\n        \r\n        if(Object.keys(step).length === 0)\r\n            return undefined;\r\n        else if(index === step['parent']) {\r\n            return {\r\n                \"arrayID\": step[\"arrayID\"],\r\n                \"arrayElementID\": step[\"arrayElementID\"],\r\n                \"value\": step[\"value\"]\r\n            }\r\n        }\r\n        else if(index === step['parent'] + 1) {\r\n            return {\r\n                \"childArrayIDs\": step[\"childArrayIDs\"],\r\n                \"childArrayElementIDs\": step[\"childArrayElementIDs\"]\r\n            }\r\n        }\r\n        return undefined \r\n    }\r\n\r\n    const getLevels = () => {\r\n        if(Object.keys(processData).length !== 0) {\r\n            const levels = processData['partitions'].map((subarrays, levelIndex) => {\r\n                \r\n                const elements = []\r\n                processData.elements.forEach(obj => {\r\n                    if(levelIndex === obj.level)\r\n                        elements.push({\r\n                            'arrayID': obj.arrayID,\r\n                            'value': obj.value\r\n                        })\r\n                });\r\n\r\n                const sortStep = getSortStep(levelIndex)\r\n                return (\r\n                    <Level \r\n                        id={'level_' + levelIndex}\r\n                        subarrays={subarrays}\r\n                        sortStep={sortStep}\r\n                        elements={elements.length? elements : undefined}\r\n                        lastLevel={levelIndex === processData.partitions.length - 1}\r\n                    />\r\n                )\r\n            })\r\n            return levels\r\n        }\r\n        return <></>\r\n    }\r\n    \r\n    const getButtons = () => {\r\n        if(Object.keys(processData).length !== 0) {\r\n            return (\r\n                <div className='row-flex center-flex'>\r\n                    <button id=\"Prev\" onClick={handleClick} disabled={counter === -1}>\r\n                        Prev\r\n                    </button>\r\n                    <button id=\"Next\" onClick={handleClick} disabled={counter === processData['steps'].length - 1}>\r\n                        Next\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        return <></>\r\n    }\r\n    \r\n    \r\n    const handleChange = (event) => {\r\n        setArrayData(event.target.value)\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        if(event.target.id === \"Next\")\r\n            setCounter(counter + 1)\r\n        else\r\n            setCounter(counter - 1)\r\n    }\r\n\r\n    const handleSumbit = (event) => {\r\n        event.preventDefault()\r\n        if(arrayData !== '') {\r\n            axios.post('http://localhost:3001/process', {\r\n                \"arrayData\": arrayData\r\n            })\r\n            .then(res => {\r\n                // console.log(res.data)\r\n                setCounter(-1)\r\n                if(Object.keys(processData).length !== 0)\r\n                    setProcessedData({})\r\n                setProcessedData(res.data)\r\n                \r\n            })\r\n            .catch(err => alert('Incorrect Data'))\r\n        }\r\n        else \r\n            alert('Input can\\'t be empty!')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"center\">\r\n                <div className='col-flex'>\r\n                    {getLevels()}\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <h1>Merge Sort Visualizer</h1>\r\n                    <form onSubmit={handleSumbit}>\r\n                        <input\r\n                            value={arrayData}\r\n                            onChange={handleChange} \r\n                        />\r\n                        <button type=\"submit\">Generate</button>\r\n                    </form>\r\n                    {getButtons()}\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <p>Made with <span role=\"img\" aria-label=\"heart\">&#129505;</span> by <a href=\"https://github.com/satyajitd\" target=\"_blank\" rel=\"noopener noreferrer\">Satyajit Das</a>.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}